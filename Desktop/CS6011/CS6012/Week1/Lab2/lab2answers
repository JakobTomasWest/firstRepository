On your computer, how many times per second does the millisecond timer update?
1002 on TimingExperiment02

Is it possible to determine how many times per second the nanosecond timer updates? If so, how many? If not, why not?
There is too much variation in CPU load, cache performance, memory etc to determine the exact rate for how many times per second the nanosecond timer updates, it's different every time because the rate is sooooo fast.
According to my results on experiment 5 it updates about 2.38 million times a second, but it's different every time.

Judging by experiment 4, how long does it appear to take to compute System.nanoTime()?

Less than 42 nanoseconds because the shorts loop took 42 nanoseconds to advanced so sure it's less than that.

Estimate the precision of your answer above (+/- how many nanoseconds?)
42 + or - 2

How long does it take to compute the square root of the numbers 1 through 10?

It took 6250 nano seconds for the experiment 7. But only like 51 for the experiment 8.

Estimate the precision of your answer above (+/- how many nanoseconds?)
+/- 2000 nanoseconds for experiment 7
It was usually like 50 or 51 but +/- 7 nanoseconds for experiment 8
If you repeat the square root test 100x as many times, does the precision improve?
When I increased the time to loop to 10000000 from 10000 the precision improved, usually the result was 3 nano seconds about 8/10 times. At 100000 it was usually about 9 or 10.
How could you improve the results (get a more accurate estimate of elapsed time)?
You could change it from being a long so it's more accurate, you could run more loops to get a more precise average or you could get a better computer.
